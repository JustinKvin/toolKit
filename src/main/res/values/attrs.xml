<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>

    <!--flash view-->
    <declare-styleable name="FlashView">
        <attr name="effect">
            <enum name="accordion" value="0" />
            <enum name="cube" value="1" />
            <enum name="def" value="2" />
            <enum name="depthPage" value="3" />
            <enum name="inRightDown" value="4" />
            <enum name="inRightUp" value="5" />
            <enum name="rotate" value="6" />
            <enum name="zoomOutPage" value="7" />
        </attr>
    </declare-styleable>

    <!-- ItemLinearLayout attribute-->
    <declare-styleable name="ItemLinearLayout">
        <attr name="leftImg" format="reference" />
        <attr name="rightImg" format="reference" />
        <attr name="txt" format="string" />
        <attr name="txtSize" format="dimension" />
        <attr name="txtColor" format="reference" />
        <attr name="lineColor" format="reference" />
        <attr name="marginLeft" format="dimension" />
        <attr name="marginRight" format="dimension" />
        <attr name="marginGap" format="dimension" />
        <attr name="lineType">
            <flag name="typeFill" value="0" />
            <flag name="typeNot" value="1" />
            <flag name="typeDouble" value="2" />
        </attr>
    </declare-styleable>

    <!--Choice layout -->
    <declare-styleable name="ChoiceLayout">
        <attr name="clVerSpace" format="dimension" />
        <attr name="clHorSpace" format="dimension" />
        <attr name="clTxtSize" format="dimension" />
        <attr name="clChoiceTheme">
            <enum name="themeRed" value="0" />
            <enum name="themeYellow" value="1" />
            <enum name="themeGreen" value="2" />
            <enum name="themeBlue" value="3" />
        </attr>
    </declare-styleable>

    <!--Classify TextView -->
    <declare-styleable name="ClassifyTextView">
        <attr name="ctvTxt" format="string" />
        <attr name="ctvTxtColor" format="reference" />
        <attr name="ctvTxtSize" format="dimension" />
        <attr name="ctvLineWidth" format="dimension" />
        <attr name="ctvLineColor" format="reference" />
        <attr name="ctvVerSpace" format="dimension" />
    </declare-styleable>

    <!--Custom LP-->
    <declare-styleable name="CustomLayoutLP">
        <attr name="android:layout_gravity" />
        <attr name="layout_position">
            <enum name="middle" value="0" />
            <enum name="left" value="1" />
            <enum name="right" value="2" />
        </attr>
    </declare-styleable>

    <!--circle image view-->
    <declare-styleable name="CircleImageView">
        <attr name="civ_border_width" format="dimension" />
        <attr name="civ_border_color" format="color" />
        <attr name="civ_border_overlay" format="boolean" />
        <attr name="civ_fill_color" format="color" />
    </declare-styleable>
</resources>